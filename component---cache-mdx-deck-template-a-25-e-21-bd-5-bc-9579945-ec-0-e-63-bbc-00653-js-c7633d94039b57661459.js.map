{"version":3,"sources":["webpack:///./src/decks/rpscala-236/index.mdx","webpack:///./.cache/mdx-deck-template/a25e21bd5bc9579945ec0e63bbc00653.js","webpack:///./src/components/slide-deck-wrapper.js","webpack:///./node_modules/refractor/lang/java.js","webpack:///./node_modules/react-syntax-highlighter/languages/prism/haskell.js","webpack:///./node_modules/refractor/lang/haskell.js","webpack:///./node_modules/react-syntax-highlighter/languages/prism/scala.js","webpack:///./node_modules/refractor/lang/scala.js","webpack:///./src/decks/rpscala-236/images/leancheck.png","webpack:///./src/decks/rpscala-236/images/leancheck-phd.png","webpack:///./src/decks/rpscala-236/images/leanprops.png"],"names":["theme","Object","assign","base","prism","style","languages","haskell","scala","rpscala_236","Date","_ref","components","objectWithoutPropertiesLoose_default","react_default","a","createElement","dist","name","_ref2","_ref3","_ref4","src","leancheckImage","parentName","props","href","_ref5","leancheckPhDImage","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","className","metaString","_ref12","_ref13","_ref14","leanpropsImage","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","fontSize","_ref25","_ref26","_ref27","_ref28","_ref29","_ref30","_ref31","__webpack_require__","d","__webpack_exports__","query","MdxDeckTemplate","data","slide_deck_wrapper","slides","setConfig","ignoreSFC","pureRender","previous","updaters","next","decrementIndex","incrementIndex","decrementStep","incrementStep","toggleMode","keys","constants","SlideDeckWrapper","React","memo","slideDeckRef","createRef","focusRef","useEffect","current","focus","siteTitle","site","siteMetadata","title","file","fields","frontmatter","react__WEBPACK_IMPORTED_MODULE_5___default","Fragment","react_helmet__WEBPACK_IMPORTED_MODULE_6__","content","ref","role","tabIndex","onKeyDown","e","document","activeElement","metaKey","ctrlKey","slideDeck","alt","altKey","shiftKey","shift","keyCode","p","update","o","g","right","pageDown","preventDefault","left","pageUp","space","up","down","mdx_deck__WEBPACK_IMPORTED_MODULE_3__","propTypes","PropTypes","object","isRequired","array","java","Prism","extend","keyword","number","operator","pattern","lookbehind","insertBefore","annotation","alias","generics","inside","punctuation","module","exports","displayName","aliases","defineProperty","value","obj","_haskell","require","_haskell2","__esModule","default","comment","char","string","greedy","import_statement","builtin","hvariable","constant","_scala","_scala2","refractorJava","register","symbol"],"mappings":"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","file":"component---cache-mdx-deck-template-a-25-e-21-bd-5-bc-9579945-ec-0-e-63-bbc-00653-js-c7633d94039b57661459.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\nimport {default as base} from 'mdx-deck/themes';\nimport style from 'react-syntax-highlighter/styles/prism/atom-dark';\nimport haskell from 'react-syntax-highlighter/languages/prism/haskell';\nimport scala from 'react-syntax-highlighter/languages/prism/scala';\nimport leancheckImage from './images/leancheck.png';\nimport leancheckPhDImage from './images/leancheck-phd.png';\nimport leanpropsImage from './images/leanprops.png';\nexport const theme = {\n  ...base,\n  prism: {\n    style,\n    languages: {haskell, scala},\n  },\n};\nexport const meta = {\n\ttitle: 'LeanPropsの紹介',\n\tevent: {\n\t\tname: 'Scala勉強会第236回 in 西新宿',\n\t\turl: 'https://rpscala.connpass.com/event/115424/'\n\t},\n\tdate: new Date('2019-01-22T00:00:00.000Z')\n}\n\nexport default [\n  ({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}>\n\n\n<MDXTag name=\"h1\" components={components}>{`LeanProps の紹介`}</MDXTag>\n<MDXTag name=\"h2\" components={components}>{`TSUYUSATO Kitsune (@MakeNowJust)`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`前回のあらすじ`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h2\" components={components}>{`ある日のこと`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><img src={leancheckImage} />\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/rudymatela/leancheck\"}}>{`https://github.com/rudymatela/leancheck`}</MDXTag></MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><img src={leancheckPhDImage} />\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://matela.com.br/paper/rudy-phd-thesis-2017.pdf\"}}>{`https://matela.com.br/paper/rudy-phd-thesis-2017.pdf`}</MDXTag></MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h2\" components={components}>{`ひと目で、尋常じゃないライブラリと見抜いたよ`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h2\" components={components}>{`(Haskell のライブラリなので)`}</MDXTag>\n<MDXTag name=\"h2\" components={components}>{`Scala に移植してみよう！`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`本編`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`自己紹介`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`TSUYUSATO Kitsune (@MakeNowJust)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`普段は TypeScript とかを書いている`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Crystal というプログラミング言語のコントリビュータ`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`形式言語が好き`}</MDXTag>\n</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`まず初めに、`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`LeanCheck とは？`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Haskell のライブラリ`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"em\" components={components} parentName=\"li\">{`\"simple enumerative property-based testing library\"`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`実装が比較的小さい`}<br/>{`\n(`}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Test.LeanCheck.Core`}</MDXTag>{`はコメントを除いて 185 行くらい)`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-haskell\",\"metaString\":\"\"}}>{`> holds 100 \\$ \\\\xs-> sort (sort xs) == sort (xs :: [Int])\nTrue\n`}</MDXTag></MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`LeanCheck とは？`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`SmallCheck のような感じで、小さいものから順番にチェックしていく方針`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`ランダムにデータを生成するのは`}<MDXTag name=\"em\" components={components} parentName=\"li\">{`サポートしていない`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Generic を使ったデータを生成するクラスの自動導出`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Template Haskell を使ったデータを生成する型クラスの自動導出`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`関数の生成をサポートしている`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`関数に対する`}<MDXTag name=\"inlineCode\" components={components} parentName=\"strong\">{`Show`}</MDXTag>{`クラスのインスタンスを提供している`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`(個人的には下の二つが面白いと思った)`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`早速、Scala に移植してみた`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><img src={leanpropsImage} />\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://makenowjust.github.io/leanprops/\"}}>{`https://makenowjust.github.io/leanprops/`}</MDXTag></MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`LeanProps という名前になった`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`(leancheck4s という名前が`}<br/>{`当時はなぜか思い付かなかった‥‥)`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`LeanProps で出来ること`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Int`}</MDXTag>{`などの整数、`}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Double`}</MDXTag>{`などの浮動小数点数、`}<br/>{`いくつかのコレクション、`}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`関数`}</MDXTag>{`などの生成`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`↑ の型の値を文字列にしてて表示する機能(pretty print)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`property-based testing の基本的なサポート`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Magnolia による生成と表示を担当する型クラスの自動導出`}</MDXTag>\n</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-scala\",\"metaString\":\"\"}}>{`scala> import codes.quine.leanprops._\nimport codes.quine.leanprops._\n\nscala> inspect { (x: Boolean, y: Boolean) => x && y }\nres0: String =\n((x, y) => (x, y) match {\n  case (true, true) => true\n  case _            => false\n})\n\nscala> holds(100) { (xs: List[Int]) =>\n     |   xs.sorted.sorted == xs.sorted\n     | }\nres1: Boolean = true\n`}</MDXTag></MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`動いています`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`LeanProps の主要な型`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`trait Listable[A]`}</MDXTag>{`:`}<br/><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`A`}</MDXTag>{`が自動生成可能なことを表す型クラス`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`trait Inspectable[A]`}</MDXTag>{`:`}<br/><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`A`}</MDXTag>{`が文字列にして表示可能なことを表す型クラス`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`class Tiers[A]`}</MDXTag>{`:`}<br/><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Stream[Seq[A]]`}</MDXTag>{`をラップしたデータ構造`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`class WithInspectConfig[A]`}</MDXTag>{`:`}<br/><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`InspectConfig`}</MDXTag>{`を持った Reader Monad`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`一番重要なのは`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`trait Listable[A]`}</MDXTag>{`。`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h2\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"h2\">{`trait Listable[A]`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-scala\",\"metaString\":\"\"}}>{`trait Listable[A] {\n  def tiers: Tiers[A]\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Tiers[A]`}</MDXTag>{`は`}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Stream[Seq[A]]`}</MDXTag>{`のラッパ`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`なぜ単純な`}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Stream[A]`}</MDXTag>{`ではなく`}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Stream[Seq[A]]`}</MDXTag>{`なのは`}<br/>{`\nデータを組み合わせられるようにするため`}</MDXTag>\n</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h2\" components={components}>{`どうして`}<MDXTag name=\"inlineCode\" components={components} parentName=\"h2\">{`Stream[A]`}</MDXTag>{`じゃダメ？`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`仮に`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Listable[A]`}</MDXTag>{`がこうだったとする。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-scala\",\"metaString\":\"\"}}>{`trait Listable[A] {\n  def list: Stream[A]\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`list[A] = Listable[A].list`}</MDXTag>{`とする。`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h2\" components={components}>{`どうして`}<MDXTag name=\"inlineCode\" components={components} parentName=\"h2\">{`Stream[A]`}</MDXTag>{`じゃダメ？`}</MDXTag>\n<small>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\"><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`list[Int] = Stream(0, 1, -1, ...)`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`そこで`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`list[(A, B)]`}</MDXTag>{`を考えると、単純な実装だと‥`}</MDXTag>\n<MDXTag name=\"pre\" components={components} parentName=\"li\"><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-scala\",\"metaString\":\"\"}}>{`list[(A, B)] = for {\n  x <- list[A]\n  y <- list[B]\n} yield (x, y)\n`}</MDXTag></MDXTag>\n</MDXTag>\n</MDXTag>\n</small></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h2\" components={components}>{`どうして`}<MDXTag name=\"inlineCode\" components={components} parentName=\"h2\">{`Stream[A]`}</MDXTag>{`じゃダメ？`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`つまり、`}</MDXTag>\n<MDXTag name=\"pre\" components={components} parentName=\"li\"><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-scala\",\"metaString\":\"\"}}>{`Stream((list[A](0), list[B](0)),\n       (list[A](0), list[B](1)),\n       ... (list[B]が終了するまで続く),\n       (list[A](1), list[B](0)),\n       ...)\n`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\"><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`(Int, Int)`}</MDXTag>{`の場合、`}<br/>{`左側に`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`0`}</MDXTag>{`しか出てこなくなる。`}</MDXTag>\n</MDXTag>\n</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h2\" components={components}>{`どうして`}<MDXTag name=\"inlineCode\" components={components} parentName=\"h2\">{`Stream[A]`}</MDXTag>{`じゃダメ？`}</MDXTag>\n<small style={{fontSize: \"0.65em\"}}>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`そこで`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`tiers[A]: Stream[Seq[A]]`}</MDXTag>{`を考える。`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\"><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`tiers[Int] = Stream(Seq(0), Seq(1), Seq(-1), ...)`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\"><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`tiers[(A, B)]`}</MDXTag>{`は次のような感じ、`}</MDXTag>\n<MDXTag name=\"pre\" components={components} parentName=\"li\"><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-scala\",\"metaString\":\"\"}}>{`def prod[A, B](xs: Seq[A], ys: Seq[B]) = for (x <- xs; y <- ys) yield (x, y)\nStream(prod(tiers[A](0), tiers[B](0)),      // 添字の合計が0\n       prod(tiers[A](0), tiers[B](1))\n         ++ prod(tiers[A](1), tiers[B](0)), // 添字の合計が1\n       prod(tiers[A](0), tiers[B](2))\n         ++ prod(tiers[A](1), tiers[B](1))\n         ++ prod(tiers[A](2), tiers[B](0)), // 添字の合計が2\n       ...)\n`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`こうすると、無限リストでもいい感じに積を取れる。`}</MDXTag>\n</MDXTag>\n</MDXTag>\n</small></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h2\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"h2\">{`trait Listable[A]`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Set`}</MDXTag>{`や`}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Map`}</MDXTag>{`の場合は重複しないように生成したり、`}<br/>{`\nいくつか工夫する必要がある。`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Function1`}</MDXTag>{`の場合は`}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Map`}</MDXTag>{`とほとんど同じなのだけど、`}<br/>{`\n生成される関数を全域にするためフォールバック用の値も`}<br/>{`\n同時に生成する。`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`詳しくはソースコードを読んでください。`}</MDXTag>\n</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`関数の表示`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`(さすがに時間が無さそうなので三行で)`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`引数の組を生成して、関数を呼び出して、返り値を記録`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`返り値の同じ引数の組を`}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`_`}</MDXTag>{`で上手い具合に置き換えていく`}<br/>{`\n(実際はそんなに上手くやっていない)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`それらを並べて表示する。`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`引数を自動生成できるんだから、`}<br/>{`\nたくさん呼び出して返り値を記録すれば`}<br/>{`\nそれっぽい`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`match`}</MDXTag>{`式が作れるよね、というノリ。`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"h1\">{`trait Inspectable[A]`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-scala\",\"metaString\":\"\"}}>{`trait Inspectable[A] {\n  def inspect(x: A): WithInspectConfig[A]\n  def bindtiers(x: Try[A]): Tiers[(Seq[Seq[String]], Try[String])]\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`この`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`bindtiers`}</MDXTag>{`が、引数と返り値を記録するメソッド。`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`現実は厳しい‥‥`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-scala\",\"metaString\":\"\"}}>{`scala> inspect { (xs: List[Int]) => xs.head }\nres3: String =\n(x => x match {\n  case List()        => throw new NoSuchElementException(\"head of empty list\")\n  case List(0)       => 0\n  case List(0, 0)    => 0\n  case List(1)       => 1\n  case List(0, 0, 0) => 0\n  case List(0, 1)    => 0\n  case List(1, 0)    => 1\n  case List(-1)      => -1\n  ...\n})\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`ぶっちゃけ`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Boolean`}</MDXTag>{`のときくらいしか上手くいかない。`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`思ったことなど`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Stream`}</MDXTag>{`は難しすぎる。`}<br/>{`すぐに OOM と StackOverflow を起こす`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Magnolia の黒魔術感‥‥。`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`テストは `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/lihaoyi/utest\"}}>{`μTest`}</MDXTag>{` と `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/tkawachi/sbt-doctest\"}}>{`sbt-doctest`}</MDXTag>{` で書いた。`}<br/>{`\ndoctest 良い`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`ドキュメントは `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://scalameta.org/mdoc/\"}}>{`mdoc`}</MDXTag>{` と `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://docusaurus.io\"}}>{`Docusaurus`}</MDXTag>{` で作った。`}<br/>{`\n大したライブラリじゃないのに無駄に立派になってしまう`}</MDXTag>\n</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`今後の目標、やっていき`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`いくつかの名前のリファクタリング。`}<br/>\n<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`WithInspectConfig`}</MDXTag>{`って名前どうなの？`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Listable`}</MDXTag>{`、`}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Inspectable`}</MDXTag>{`のインスタンスを増やす`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`cats`}</MDXTag>{`・`}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`scalaz`}</MDXTag>{`の型のインスタンスを実装する`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`shapeless`}</MDXTag>{`での自動導出`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`sbt`}</MDXTag>{`との統合`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`discipline`}</MDXTag>{`のようなインターフェース(?)`}</MDXTag>\n</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`ありがとうございました 😄`}</MDXTag></MDXTag>\n]","// mdx-deck-template for /home/circleci/project/src/decks/rpscala-236/index.mdx\n\nimport {graphql} from 'gatsby';\nimport React from 'react';\n\nimport SlideDeckWrapper from '/home/circleci/project/src/components/slide-deck-wrapper.js';\nimport slides, {theme} from '/home/circleci/project/src/decks/rpscala-236/index.mdx';\n\nconst MdxDeckTemplate = ({data}) =>\n  <SlideDeckWrapper\n    data={data}\n    slides={slides}\n    theme={theme}\n  />;\n\nexport default MdxDeckTemplate;\n\n\nexport const query = graphql`\n  query($id: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n\n    file(id: {eq: $id}) {\n      fields {\n        slug\n        screenshotUrl\n        frontmatter {\n          title\n          date\n        }\n      }\n    }\n  }\n`;\n","/* eslint-disable complexity, default-case */\n\nimport {SlideDeck, updaters, constants} from 'mdx-deck';\nimport PropTypes from 'prop-types';\nimport React, {useEffect} from 'react';\nimport {Helmet} from 'react-helmet';\nimport {setConfig} from 'react-hot-loader';\n\nsetConfig({\n  ignoreSFC: true,\n  pureRender: true,\n});\n\nimport 'modern-normalize';\n\nconst {\n  previous,\n  next,\n  decrementIndex,\n  incrementIndex,\n  decrementStep,\n  incrementStep,\n  toggleMode,\n} = updaters;\n\nconst {keys} = constants;\n\nconst SlideDeckWrapper = React.memo(({data, slides, theme}) => {\n  const slideDeckRef = React.createRef();\n  const focusRef = React.createRef();\n\n  const handleKeyDown = e => {\n    if (document.activeElement !== focusRef.current) {\n      return;\n    }\n\n    // From https://github.com/jxnblk/mdx-deck/blob/118f7fd439fba16c5bf08724741368d2802d9b77/src/SlideDeck.js#L77-L127\n\n    if (e.metaKey || e.ctrlKey) {\n      return;\n    }\n\n    const slideDeck = slideDeckRef.current;\n\n    const alt = e.altKey && !e.shiftKey;\n    const shift = e.shiftKey && !e.altKey;\n\n    if (alt) {\n      switch (e.keyCode) {\n        case keys.p:\n          slideDeck.update(toggleMode('presenter'));\n          break;\n        case keys.o:\n          slideDeck.update(toggleMode('overview'));\n          break;\n        case keys.g:\n          slideDeck.update(toggleMode('grid'));\n          break;\n      }\n    } else if (shift) {\n      switch (e.keyCode) {\n        case keys.right:\n        case keys.pageDown:\n          e.preventDefault();\n          slideDeck.update(incrementIndex);\n          break;\n        case keys.left:\n        case keys.pageUp:\n          e.preventDefault();\n          slideDeck.update(decrementIndex);\n          break;\n      }\n    } else if (!alt && !shift) {\n      switch (e.keyCode) {\n        case keys.right:\n        case keys.pageDown:\n        case keys.space:\n          e.preventDefault();\n          slideDeck.update(next);\n          break;\n        case keys.left:\n        case keys.pageUp:\n          e.preventDefault();\n          slideDeck.update(previous);\n          break;\n        case keys.up:\n          slideDeck.update(decrementStep);\n          break;\n        case keys.down:\n          slideDeck.update(incrementStep);\n          break;\n      }\n    }\n  };\n\n  useEffect(() => {\n    // Focus to wrapper element to handle key events without clicking window.\n    focusRef.current.focus();\n  });\n\n  const {\n    site: {\n      siteMetadata: {title: siteTitle},\n    },\n    file: {\n      fields: {\n        frontmatter: {title: deckTitle},\n      },\n    },\n  } = data;\n  const title = `${deckTitle} - ${siteTitle}`;\n\n  return (\n    <>\n      <Helmet>\n        <title>{title}</title>\n        {/* Reset viewport beacause smartphone's screen width is too small to show slides. */}\n        <meta name=\"viewport\" content=\"\" />\n      </Helmet>\n      <div ref={focusRef} role=\"presentation\" tabIndex=\"-1\" onKeyDown={handleKeyDown}>\n        <SlideDeck ref={slideDeckRef} slides={slides} theme={theme} />\n      </div>\n    </>\n  );\n});\n\nSlideDeckWrapper.propTypes = {\n  data: PropTypes.object.isRequired,\n  slides: PropTypes.array.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default SlideDeckWrapper;\n","'use strict'\n\nmodule.exports = java\njava.displayName = 'java'\njava.aliases = []\nfunction java(Prism) {\n  Prism.languages.java = Prism.languages.extend('clike', {\n    keyword: /\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while)\\b/,\n    number: /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp-]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?[df]?/i,\n    operator: {\n      pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,\n      lookbehind: true\n    }\n  })\n  Prism.languages.insertBefore('java', 'function', {\n    annotation: {\n      alias: 'punctuation',\n      pattern: /(^|[^.])@\\w+/,\n      lookbehind: true\n    }\n  })\n  Prism.languages.insertBefore('java', 'class-name', {\n    generics: {\n      pattern: /<\\s*\\w+(?:\\.\\w+)?(?:\\s*,\\s*\\w+(?:\\.\\w+)?)*>/i,\n      alias: 'function',\n      inside: {\n        keyword: Prism.languages.java.keyword,\n        punctuation: /[<>(),.:]/\n      }\n    }\n  })\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _haskell = require(\"refractor/lang/haskell.js\");\n\nvar _haskell2 = _interopRequireDefault(_haskell);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n;\nexports.default = _haskell2.default;","'use strict'\n\nmodule.exports = haskell\nhaskell.displayName = 'haskell'\nhaskell.aliases = []\nfunction haskell(Prism) {\n  Prism.languages.haskell = {\n    comment: {\n      pattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|{-[\\s\\S]*?-})/m,\n      lookbehind: true\n    },\n    char: /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+)|\\\\\\s+\\\\)*\"/,\n      greedy: true\n    },\n    keyword: /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n    import_statement: {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern: /((?:\\r?\\n|\\r|^)\\s*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][_a-zA-Z0-9']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:import|qualified|as|hiding)\\b/\n      }\n    },\n    // These are builtin variables only. Constructors are highlighted later as a constant.\n    builtin: /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n    // decimal integers and floating point numbers | octal integers | hexadecimal integers\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n    // Most of this is needed because of the meaning of a single '.'.\n    // If it stands alone freely, it is the function composition.\n    // It may also be a separator between a module name and an identifier => no\n    // operator. If it comes together with other special characters it is an\n    // operator too.\n    operator: /\\s\\.\\s|[-!#$%*+=?&@|~.:<>^\\\\\\/]*\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+|[-!#$%*+=?&@|~.:<>^\\\\\\/]+\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]*|[-!#$%*+=?&@|~:<>^\\\\\\/]+|`([A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n    // In Haskell, nearly everything is a variable, do not highlight these.\n    hvariable: /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*\\b/,\n    constant: /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*\\b/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _scala = require(\"refractor/lang/scala.js\");\n\nvar _scala2 = _interopRequireDefault(_scala);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n;\nexports.default = _scala2.default;","'use strict'\nvar refractorJava = require('./java.js')\nmodule.exports = scala\nscala.displayName = 'scala'\nscala.aliases = []\nfunction scala(Prism) {\n  Prism.register(refractorJava)\n  Prism.languages.scala = Prism.languages.extend('java', {\n    keyword: /<-|=>|\\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\\b/,\n    string: [\n      {\n        pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n        greedy: true\n      },\n      {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }\n    ],\n    builtin: /\\b(?:String|Int|Long|Short|Byte|Boolean|Double|Float|Char|Any|AnyRef|AnyVal|Unit|Nothing)\\b/,\n    number: /\\b0x[\\da-f]*\\.?[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n    symbol: /'[^\\d\\s\\\\]\\w*/\n  })\n  delete Prism.languages.scala['class-name']\n  delete Prism.languages.scala['function']\n}\n","module.exports = __webpack_public_path__ + \"static/leancheck-e726c387337e979d2a25d8205343dc60.png\";","module.exports = __webpack_public_path__ + \"static/leancheck-phd-0ac506f2ed27971c1d6391d144f4511a.png\";","module.exports = __webpack_public_path__ + \"static/leanprops-fc60888b3fb44d35b184356c16c945ff.png\";"],"sourceRoot":""}