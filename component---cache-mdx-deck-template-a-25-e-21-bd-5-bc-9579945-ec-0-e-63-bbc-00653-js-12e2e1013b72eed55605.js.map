{"version":3,"sources":["webpack:///./src/decks/rpscala-236/index.mdx","webpack:///./.cache/mdx-deck-template/a25e21bd5bc9579945ec0e63bbc00653.js","webpack:///./node_modules/refractor/lang/java.js","webpack:///./node_modules/react-syntax-highlighter/languages/prism/haskell.js","webpack:///./node_modules/refractor/lang/haskell.js","webpack:///./node_modules/react-syntax-highlighter/languages/prism/scala.js","webpack:///./node_modules/refractor/lang/scala.js","webpack:///./src/decks/rpscala-236/images/leancheck.png","webpack:///./src/decks/rpscala-236/images/leancheck-phd.png","webpack:///./src/decks/rpscala-236/images/leanprops.png"],"names":["theme","base","prism","style","languages","haskell","scala","Date","components","name","src","leancheckImage","parentName","props","leancheckPhDImage","leanpropsImage","fontSize","MdxDeckTemplate","data","slides","query","java","Prism","keywords","className","extend","keyword","clike","pattern","lookbehind","number","operator","insertBefore","annotation","alias","namespace","inside","punctuation","generics","module","exports","displayName","aliases","Object","defineProperty","value","obj","_haskell","_haskell2","__esModule","comment","string","greedy","import_statement","builtin","hvariable","constant","hs","_scala","_scala2","refractorJava","register","symbol"],"mappings":"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","file":"component---cache-mdx-deck-template-a-25-e-21-bd-5-bc-9579945-ec-0-e-63-bbc-00653-js-12e2e1013b72eed55605.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\nimport {default as base} from 'mdx-deck/themes';\nimport style from 'react-syntax-highlighter/styles/prism/atom-dark';\nimport haskell from 'react-syntax-highlighter/languages/prism/haskell';\nimport scala from 'react-syntax-highlighter/languages/prism/scala';\nimport leancheckImage from './images/leancheck.png';\nimport leancheckPhDImage from './images/leancheck-phd.png';\nimport leanpropsImage from './images/leanprops.png';\nexport const theme = {\n  ...base,\n  prism: {\n    style,\n    languages: {haskell, scala},\n  },\n};\nexport const meta = {\n\ttitle: 'LeanPropsの紹介',\n\tevent: {\n\t\tname: 'Scala勉強会第236回 in 西新宿',\n\t\turl: 'https://rpscala.connpass.com/event/115424/'\n\t},\n\tdate: new Date('2019-01-22T00:00:00.000Z')\n}\n\nexport default [\n  ({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}>\n\n\n<MDXTag name=\"h1\" components={components}>{`LeanProps の紹介`}</MDXTag>\n<MDXTag name=\"h2\" components={components}>{`TSUYUSATO Kitsune (@MakeNowJust)`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`前回のあらすじ`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h2\" components={components}>{`ある日のこと`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><img src={leancheckImage} />\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/rudymatela/leancheck\"}}>{`https://github.com/rudymatela/leancheck`}</MDXTag></MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><img src={leancheckPhDImage} />\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://matela.com.br/paper/rudy-phd-thesis-2017.pdf\"}}>{`https://matela.com.br/paper/rudy-phd-thesis-2017.pdf`}</MDXTag></MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h2\" components={components}>{`ひと目で、尋常じゃないライブラリと見抜いたよ`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h2\" components={components}>{`(Haskell のライブラリなので)`}</MDXTag>\n<MDXTag name=\"h2\" components={components}>{`Scala に移植してみよう！`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`本編`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`自己紹介`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`TSUYUSATO Kitsune (@MakeNowJust)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`普段は TypeScript とかを書いている`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Crystal というプログラミング言語のコントリビュータ`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`形式言語が好き`}</MDXTag>\n</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`まず初めに、`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`LeanCheck とは？`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Haskell のライブラリ`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"em\" components={components} parentName=\"li\">{`\"simple enumerative property-based testing library\"`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`実装が比較的小さい`}<br/>{`\n(`}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Test.LeanCheck.Core`}</MDXTag>{`はコメントを除いて 185 行くらい)`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-haskell\",\"metaString\":\"\"}}>{`> holds 100 \\$ \\\\xs-> sort (sort xs) == sort (xs :: [Int])\nTrue\n`}</MDXTag></MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`LeanCheck とは？`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`SmallCheck のような感じで、小さいものから順番にチェックしていく方針`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`ランダムにデータを生成するのは`}<MDXTag name=\"em\" components={components} parentName=\"li\">{`サポートしていない`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Generic を使ったデータを生成するクラスの自動導出`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Template Haskell を使ったデータを生成する型クラスの自動導出`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`関数の生成をサポートしている`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`関数に対する`}<MDXTag name=\"inlineCode\" components={components} parentName=\"strong\">{`Show`}</MDXTag>{`クラスのインスタンスを提供している`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`(個人的には下の二つが面白いと思った)`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`早速、Scala に移植してみた`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><img src={leanpropsImage} />\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://makenowjust.github.io/leanprops/\"}}>{`https://makenowjust.github.io/leanprops/`}</MDXTag></MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`LeanProps という名前になった`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`(leancheck4s という名前が`}<br/>{`当時はなぜか思い付かなかった‥‥)`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`LeanProps で出来ること`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Int`}</MDXTag>{`などの整数、`}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Double`}</MDXTag>{`などの浮動小数点数、`}<br/>{`いくつかのコレクション、`}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`関数`}</MDXTag>{`などの生成`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`↑ の型の値を文字列にしてて表示する機能(pretty print)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`property-based testing の基本的なサポート`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Magnolia による生成と表示を担当する型クラスの自動導出`}</MDXTag>\n</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-scala\",\"metaString\":\"\"}}>{`scala> import codes.quine.leanprops._\nimport codes.quine.leanprops._\n\nscala> inspect { (x: Boolean, y: Boolean) => x && y }\nres0: String =\n((x, y) => (x, y) match {\n  case (true, true) => true\n  case _            => false\n})\n\nscala> holds(100) { (xs: List[Int]) =>\n     |   xs.sorted.sorted == xs.sorted\n     | }\nres1: Boolean = true\n`}</MDXTag></MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`動いています`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`LeanProps の主要な型`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`trait Listable[A]`}</MDXTag>{`:`}<br/><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`A`}</MDXTag>{`が自動生成可能なことを表す型クラス`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`trait Inspectable[A]`}</MDXTag>{`:`}<br/><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`A`}</MDXTag>{`が文字列にして表示可能なことを表す型クラス`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`class Tiers[A]`}</MDXTag>{`:`}<br/><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Stream[Seq[A]]`}</MDXTag>{`をラップしたデータ構造`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`class WithInspectConfig[A]`}</MDXTag>{`:`}<br/><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`InspectConfig`}</MDXTag>{`を持った Reader Monad`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`一番重要なのは`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`trait Listable[A]`}</MDXTag>{`。`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h2\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"h2\">{`trait Listable[A]`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-scala\",\"metaString\":\"\"}}>{`trait Listable[A] {\n  def tiers: Tiers[A]\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Tiers[A]`}</MDXTag>{`は`}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Stream[Seq[A]]`}</MDXTag>{`のラッパ`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`なぜ単純な`}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Stream[A]`}</MDXTag>{`ではなく`}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Stream[Seq[A]]`}</MDXTag>{`なのは`}<br/>{`\nデータを組み合わせられるようにするため`}</MDXTag>\n</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h2\" components={components}>{`どうして`}<MDXTag name=\"inlineCode\" components={components} parentName=\"h2\">{`Stream[A]`}</MDXTag>{`じゃダメ？`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`仮に`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Listable[A]`}</MDXTag>{`がこうだったとする。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-scala\",\"metaString\":\"\"}}>{`trait Listable[A] {\n  def list: Stream[A]\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`list[A] = Listable[A].list`}</MDXTag>{`とする。`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h2\" components={components}>{`どうして`}<MDXTag name=\"inlineCode\" components={components} parentName=\"h2\">{`Stream[A]`}</MDXTag>{`じゃダメ？`}</MDXTag>\n<small>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\"><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`list[Int] = Stream(0, 1, -1, ...)`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`そこで`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`list[(A, B)]`}</MDXTag>{`を考えると、単純な実装だと‥`}</MDXTag>\n<MDXTag name=\"pre\" components={components} parentName=\"li\"><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-scala\",\"metaString\":\"\"}}>{`list[(A, B)] = for {\n  x <- list[A]\n  y <- list[B]\n} yield (x, y)\n`}</MDXTag></MDXTag>\n</MDXTag>\n</MDXTag>\n</small></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h2\" components={components}>{`どうして`}<MDXTag name=\"inlineCode\" components={components} parentName=\"h2\">{`Stream[A]`}</MDXTag>{`じゃダメ？`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`つまり、`}</MDXTag>\n<MDXTag name=\"pre\" components={components} parentName=\"li\"><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-scala\",\"metaString\":\"\"}}>{`Stream((list[A](0), list[B](0)),\n       (list[A](0), list[B](1)),\n       ... (list[B]が終了するまで続く),\n       (list[A](1), list[B](0)),\n       ...)\n`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\"><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`(Int, Int)`}</MDXTag>{`の場合、`}<br/>{`左側に`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`0`}</MDXTag>{`しか出てこなくなる。`}</MDXTag>\n</MDXTag>\n</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h2\" components={components}>{`どうして`}<MDXTag name=\"inlineCode\" components={components} parentName=\"h2\">{`Stream[A]`}</MDXTag>{`じゃダメ？`}</MDXTag>\n<small style={{fontSize: \"0.65em\"}}>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`そこで`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`tiers[A]: Stream[Seq[A]]`}</MDXTag>{`を考える。`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\"><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`tiers[Int] = Stream(Seq(0), Seq(1), Seq(-1), ...)`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\"><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`tiers[(A, B)]`}</MDXTag>{`は次のような感じ、`}</MDXTag>\n<MDXTag name=\"pre\" components={components} parentName=\"li\"><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-scala\",\"metaString\":\"\"}}>{`def prod[A, B](xs: Seq[A], ys: Seq[B]) = for (x <- xs; y <- ys) yield (x, y)\nStream(prod(tiers[A](0), tiers[B](0)),      // 添字の合計が0\n       prod(tiers[A](0), tiers[B](1))\n         ++ prod(tiers[A](1), tiers[B](0)), // 添字の合計が1\n       prod(tiers[A](0), tiers[B](2))\n         ++ prod(tiers[A](1), tiers[B](1))\n         ++ prod(tiers[A](2), tiers[B](0)), // 添字の合計が2\n       ...)\n`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`こうすると、無限リストでもいい感じに積を取れる。`}</MDXTag>\n</MDXTag>\n</MDXTag>\n</small></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h2\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"h2\">{`trait Listable[A]`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Set`}</MDXTag>{`や`}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Map`}</MDXTag>{`の場合は重複しないように生成したり、`}<br/>{`\nいくつか工夫する必要がある。`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Function1`}</MDXTag>{`の場合は`}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Map`}</MDXTag>{`とほとんど同じなのだけど、`}<br/>{`\n生成される関数を全域にするためフォールバック用の値も`}<br/>{`\n同時に生成する。`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`詳しくはソースコードを読んでください。`}</MDXTag>\n</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`関数の表示`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`(さすがに時間が無さそうなので三行で)`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`引数の組を生成して、関数を呼び出して、返り値を記録`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`返り値の同じ引数の組を`}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`_`}</MDXTag>{`で上手い具合に置き換えていく`}<br/>{`\n(実際はそんなに上手くやっていない)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`それらを並べて表示する。`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`引数を自動生成できるんだから、`}<br/>{`\nたくさん呼び出して返り値を記録すれば`}<br/>{`\nそれっぽい`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`match`}</MDXTag>{`式が作れるよね、というノリ。`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"h1\">{`trait Inspectable[A]`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-scala\",\"metaString\":\"\"}}>{`trait Inspectable[A] {\n  def inspect(x: A): WithInspectConfig[A]\n  def bindtiers(x: Try[A]): Tiers[(Seq[Seq[String]], Try[String])]\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`この`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`bindtiers`}</MDXTag>{`が、引数と返り値を記録するメソッド。`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`現実は厳しい‥‥`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-scala\",\"metaString\":\"\"}}>{`scala> inspect { (xs: List[Int]) => xs.head }\nres3: String =\n(x => x match {\n  case List()        => throw new NoSuchElementException(\"head of empty list\")\n  case List(0)       => 0\n  case List(0, 0)    => 0\n  case List(1)       => 1\n  case List(0, 0, 0) => 0\n  case List(0, 1)    => 0\n  case List(1, 0)    => 1\n  case List(-1)      => -1\n  ...\n})\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`ぶっちゃけ`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Boolean`}</MDXTag>{`のときくらいしか上手くいかない。`}</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`思ったことなど`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Stream`}</MDXTag>{`は難しすぎる。`}<br/>{`すぐに OOM と StackOverflow を起こす`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Magnolia の黒魔術感‥‥。`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`テストは `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/lihaoyi/utest\"}}>{`μTest`}</MDXTag>{` と `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/tkawachi/sbt-doctest\"}}>{`sbt-doctest`}</MDXTag>{` で書いた。`}<br/>{`\ndoctest 良い`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`ドキュメントは `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://scalameta.org/mdoc/\"}}>{`mdoc`}</MDXTag>{` と `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://docusaurus.io\"}}>{`Docusaurus`}</MDXTag>{` で作った。`}<br/>{`\n大したライブラリじゃないのに無駄に立派になってしまう`}</MDXTag>\n</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`今後の目標、やっていき`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`いくつかの名前のリファクタリング。`}<br/>\n<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`WithInspectConfig`}</MDXTag>{`って名前どうなの？`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Listable`}</MDXTag>{`、`}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Inspectable`}</MDXTag>{`のインスタンスを増やす`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`cats`}</MDXTag>{`・`}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`scalaz`}</MDXTag>{`の型のインスタンスを実装する`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`shapeless`}</MDXTag>{`での自動導出`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`sbt`}</MDXTag>{`との統合`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`discipline`}</MDXTag>{`のようなインターフェース(?)`}</MDXTag>\n</MDXTag></MDXTag>,\n\n({ components, ...props }) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components}>{`ありがとうございました 😄`}</MDXTag></MDXTag>\n]","// mdx-deck-template for /home/circleci/project/src/decks/rpscala-236/index.mdx\n\nimport {graphql} from 'gatsby';\nimport React from 'react';\n\nimport SlideDeckWrapper from '/home/circleci/project/src/components/slide-deck-wrapper.js';\nimport slides, {theme} from '/home/circleci/project/src/decks/rpscala-236/index.mdx';\n\nconst MdxDeckTemplate = ({data}) =>\n  <SlideDeckWrapper\n    data={data}\n    slides={slides}\n    theme={theme}\n  />;\n\nexport default MdxDeckTemplate;\n\n\nexport const query = graphql`\n  query($id: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n\n    file(id: {eq: $id}) {\n      fields {\n        slug\n        screenshotUrl\n        frontmatter {\n          title\n          date\n        }\n      }\n    }\n  }\n`;\n","'use strict';\n\nmodule.exports = java;\njava.displayName = 'java';\njava.aliases = [];\n\nfunction java(Prism) {\n  ;\n\n  (function (Prism) {\n    var keywords = /\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while|var|null|exports|module|open|opens|provides|requires|to|transitive|uses|with)\\b/; // based on the java naming conventions\n\n    var className = /\\b[A-Z](?:\\w*[a-z]\\w*)?\\b/;\n    Prism.languages.java = Prism.languages.extend('clike', {\n      'class-name': [className, // variables and parameters\n      // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n      /\\b[A-Z]\\w*(?=\\s+\\w+\\s*[;,=())])/],\n      keyword: keywords,\n      \"function\": [Prism.languages.clike[\"function\"], {\n        pattern: /(\\:\\:)[a-z_]\\w*/,\n        lookbehind: true\n      }],\n      number: /\\b0b[01][01_]*L?\\b|\\b0x[\\da-f_]*\\.?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*\\.?[\\d_]*|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n      operator: {\n        pattern: /(^|[^.])(?:<<=?|>>>?=?|->|([-+&|])\\2|[?:~]|[-+*/%&|^!=<>]=?)/m,\n        lookbehind: true\n      }\n    });\n    Prism.languages.insertBefore('java', 'class-name', {\n      annotation: {\n        alias: 'punctuation',\n        pattern: /(^|[^.])@\\w+/,\n        lookbehind: true\n      },\n      namespace: {\n        pattern: /(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)[a-z]\\w*(\\.[a-z]\\w*)+/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      generics: {\n        pattern: /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n        inside: {\n          'class-name': className,\n          keyword: keywords,\n          punctuation: /[<>(),.:]/,\n          operator: /[?&|]/\n        }\n      }\n    });\n  })(Prism);\n}","\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _haskell = require(\"refractor/lang/haskell.js\");\n\nvar _haskell2 = _interopRequireDefault(_haskell);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\n;\nexports[\"default\"] = _haskell2[\"default\"];","'use strict';\n\nmodule.exports = haskell;\nhaskell.displayName = 'haskell';\nhaskell.aliases = ['hs'];\n\nfunction haskell(Prism) {\n  Prism.languages.haskell = {\n    comment: {\n      pattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|{-[\\s\\S]*?-})/m,\n      lookbehind: true\n    },\n    \"char\": /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+)|\\\\\\s+\\\\)*\"/,\n      greedy: true\n    },\n    keyword: /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n    import_statement: {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern: /((?:\\r?\\n|\\r|^)\\s*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][_a-zA-Z0-9']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:import|qualified|as|hiding)\\b/\n      }\n    },\n    // These are builtin variables only. Constructors are highlighted later as a constant.\n    builtin: /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n    // decimal integers and floating point numbers | octal integers | hexadecimal integers\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n    // Most of this is needed because of the meaning of a single '.'.\n    // If it stands alone freely, it is the function composition.\n    // It may also be a separator between a module name and an identifier => no\n    // operator. If it comes together with other special characters it is an\n    // operator too.\n    operator: /\\s\\.\\s|[-!#$%*+=?&@|~.:<>^\\\\\\/]*\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+|[-!#$%*+=?&@|~.:<>^\\\\\\/]+\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]*|[-!#$%*+=?&@|~:<>^\\\\\\/]+|`([A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n    // In Haskell, nearly everything is a variable, do not highlight these.\n    hvariable: /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*\\b/,\n    constant: /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*\\b/,\n    punctuation: /[{}[\\];(),.:]/\n  };\n  Prism.languages.hs = Prism.languages.haskell;\n}","\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _scala = require(\"refractor/lang/scala.js\");\n\nvar _scala2 = _interopRequireDefault(_scala);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\n;\nexports[\"default\"] = _scala2[\"default\"];","'use strict';\n\nvar refractorJava = require('./java.js');\n\nmodule.exports = scala;\nscala.displayName = 'scala';\nscala.aliases = [];\n\nfunction scala(Prism) {\n  Prism.register(refractorJava);\n  Prism.languages.scala = Prism.languages.extend('java', {\n    keyword: /<-|=>|\\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\\b/,\n    string: [{\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true\n    }, {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    }],\n    builtin: /\\b(?:String|Int|Long|Short|Byte|Boolean|Double|Float|Char|Any|AnyRef|AnyVal|Unit|Nothing)\\b/,\n    number: /\\b0x[\\da-f]*\\.?[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n    symbol: /'[^\\d\\s\\\\]\\w*/\n  });\n  delete Prism.languages.scala['class-name'];\n  delete Prism.languages.scala['function'];\n}","module.exports = __webpack_public_path__ + \"static/leancheck-e726c387337e979d2a25d8205343dc60.png\";","module.exports = __webpack_public_path__ + \"static/leancheck-phd-0ac506f2ed27971c1d6391d144f4511a.png\";","module.exports = __webpack_public_path__ + \"static/leanprops-fc60888b3fb44d35b184356c16c945ff.png\";"],"sourceRoot":""}